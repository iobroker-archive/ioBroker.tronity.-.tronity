{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import * as utils from '@iobroker/adapter-core';\nimport axios from 'axios';\nimport * as cache from 'memory-cache';\n\nclass Tronity extends utils.Adapter {\n    private timeout: any = null;\n    private URL = 'https://api.tronity.tech';\n\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\n        super({\n            ...options,\n            name: 'tronity',\n        });\n        this.on('ready', this.onReady.bind(this));\n        this.on('stateChange', this.onStateChange.bind(this));\n        this.on('message', this.onMessage.bind(this));\n        this.on('unload', this.onUnload.bind(this));\n    }\n\n    private async onReady(): Promise<void> {\n        this.log.debug('Starting');\n        this.subscribeStates('command.*');\n        await this.setStateAsync('info.connection', false, true);\n        if (this.config.client_id && this.config.client_secret && this.config.vehicle_id) {\n            await this.setStateAsync('info.connection', true, true);\n            await this.initSetObject('command.Charging', 'boolean', 'switch');\n            await this.initSetObject('odometer', 'number', 'level');\n            await this.initSetObject('range', 'number', 'level');\n            await this.initSetObject('level', 'number', 'level');\n            await this.initSetObject('charging', 'string', 'text');\n            await this.initSetObject('power', 'number', 'level');\n            await this.initSetObject('chargeRemainingTime', 'number', 'value.time');\n            await this.initSetObject('plugged', 'boolean', 'switch');\n            await this.initSetObject('chargerPower', 'number', 'level');\n            await this.initSetObject('latitude', 'number', 'value.gps.longitude');\n            await this.initSetObject('longitude', 'number', 'value.gps.latitude');\n            await this.initSetObject('outTemp', 'number', 'level');\n            await this.initSetObject('elevation', 'number', 'level');\n            await this.initSetObject('timestamp', 'number', 'value.time');\n            await this.initSetObject('lastUpdate', 'number', 'value.time');\n\n            await this.setStateAsync('info.connection', true, true);\n            await this.setStateAsync('command.Charging', false);\n            await this.updateVehicleData();\n        }\n    }\n\n    private async initSetObject(name: string, type: any, role: string): Promise<any> {\n        return this.setObjectNotExistsAsync(name, {\n            type: 'state',\n            common: {\n                name,\n                type,\n                role,\n                write: true,\n                read: true,\n            },\n            native: {},\n        });\n    }\n\n    private async getToken(): Promise<string> {\n        try {\n            if (cache.get(this.config.client_id)) {\n                return cache.get(this.config.client_id);\n            }\n            const token = (await axios\n                .post(`${this.URL}/authentication`, {\n                    client_id: this.config.client_id,\n                    client_secret: this.config.client_secret,\n                    grant_type: 'app',\n                })\n                .then(e => e.data)) as {\n                access_token: string;\n                expires_in: number;\n            };\n            cache.put(this.config.client_id, token.access_token, token.expires_in - 120);\n            return token.access_token;\n        } catch (e: any) {\n            this.log.error(e);\n            throw Error(e);\n        }\n    }\n\n    private async updateVehicleData(): Promise<void> {\n        try {\n            if (this.config.vehicle_id) {\n                const token = await this.getToken();\n                const status = (await axios\n                    .get(`${this.URL}/tronity/vehicles/${this.config.vehicle_id}/last_record`, {\n                        headers: {\n                            Authorization: `Bearer ${token}`,\n                        },\n                    })\n                    .then(e => e.data)) as {\n                    odometer: number;\n                    range: number;\n                    level: number;\n                    charging: string;\n                    chargeRemainingTime: number;\n                    plugged: boolean;\n                    chargerPower: number;\n                    outTemp: number;\n                    elevation: number;\n                    latitude: number;\n                    longitude: number;\n                    timestamp: number;\n                    lastUpdate: number;\n                };\n                if (status.odometer > -1) {\n                    this.setState('odometer', status.odometer, true);\n                }\n                if (status.range > -1) {\n                    this.setState('range', status.range, true);\n                }\n                if (status.level > -1) {\n                    this.setState('level', status.level, true);\n                }\n                if (status.charging && status.charging.length > 0) {\n                    this.setState('charging', status.charging, true);\n                    if (status.chargeRemainingTime > 0 && status.charging !== 'Disconnected') {\n                        this.setState('chargeRemainingTime', status.chargeRemainingTime, true);\n                    }\n                }\n                if (status.plugged !== null) {\n                    this.setState('plugged', status.plugged, true);\n                }\n                if (status.chargerPower > 0) {\n                    this.setState('chargerPower', status.chargerPower, true);\n                }\n                if (status.latitude !== null) {\n                    this.setState('latitude', status.latitude, true);\n                }\n                if (status.longitude !== null) {\n                    this.setState('longitude', status.longitude, true);\n                }\n                if (status.outTemp > -100) {\n                    this.setState('outTemp', status.outTemp, true);\n                }\n                if (status.elevation > -100) {\n                    this.setState('elevation', status.elevation, true);\n                }\n                if (status.timestamp) {\n                    this.setState(\n                        'timestamp',\n                        typeof status.timestamp === 'number' ? status.timestamp : new Date(status.timestamp).getTime(),\n                        true,\n                    );\n                }\n                if (status.lastUpdate) {\n                    this.setState(\n                        'lastUpdate',\n                        typeof status.lastUpdate === 'number'\n                            ? status.lastUpdate\n                            : new Date(status.lastUpdate).getTime(),\n                        true,\n                    );\n                }\n            }\n        } catch (e: any) {\n            this.log.error(e);\n        }\n        this.timeout = setTimeout(() => this.updateVehicleData(), 60 * 1000);\n    }\n\n    private async onMessage(msg: any): Promise<void> {\n        if (msg.command === 'validate') {\n            const client_id = msg.message.client_id;\n            const client_secret = msg.message.client_secret;\n\n            this.log.info('Try to validate login data and get vehicles');\n            try {\n                const token = (await axios\n                    .post(`${this.URL}/authentication`, {\n                        json: {\n                            client_id,\n                            client_secret,\n                            grant_type: 'app',\n                        },\n                    })\n                    .then(e => e.data)) as {\n                    access_token: string;\n                    expires_in: number;\n                };\n                const vehicles = (await axios\n                    .get(`${this.URL}/tronity/vehicles?limit=1000`, {\n                        headers: {\n                            Authorization: `Bearer ${token.access_token}`,\n                        },\n                    })\n                    .then(e => e.data)) as {\n                    data: [];\n                };\n                this.sendTo(msg.from, msg.command, { success: true, vehicles: vehicles.data }, msg.callback);\n            } catch (e: any) {\n                this.log.error(e);\n                this.sendTo(msg.from, msg.command, { success: false }, msg.callback);\n            }\n        }\n    }\n\n    private onUnload(callback: () => void): void {\n        try {\n            if (this.timeout) {\n                clearTimeout(this.timeout);\n            }\n            callback();\n        } catch {\n            callback();\n        }\n    }\n\n    private async onStateChange(id: string, state: ioBroker.State | null | undefined): Promise<void> {\n        if (!state) {\n            return;\n        }\n        this.log.debug(`State Change: ${id} to ${state.val} ack ${state.ack}`);\n\n        if (this.config.vehicle_id && state.ack === false) {\n            const currentId = id.substring(this.namespace.length + 1);\n            switch (currentId) {\n                case 'command.Charging':\n                    if (state.val) {\n                        try {\n                            const token = await this.getToken();\n                            await axios.post(\n                                `${this.URL}/tronity/vehicles/${this.config.vehicle_id}/control/start_charging`,\n                                {\n                                    headers: {\n                                        Authorization: `Bearer ${token}`,\n                                    },\n                                },\n                            );\n                            this.log.info('Try to start charging!');\n                        } catch (e: any) {\n                            this.log.error(e);\n                        }\n                    } else {\n                        try {\n                            const token = await this.getToken();\n                            await axios.post(\n                                `${this.URL}/tronity/vehicles/${this.config.vehicle_id}/control/stop_charging`,\n                                {\n                                    headers: {\n                                        Authorization: `Bearer ${token}`,\n                                    },\n                                },\n                            );\n                            this.log.info('Try to stop charging!');\n                        } catch (e: any) {\n                            this.log.error(e);\n                        }\n                    }\n                    break;\n            }\n        }\n    }\n}\n\nif (require.main !== module) {\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Tronity(options);\n} else {\n    (() => new Tronity())();\n}\n"],
  "mappings": "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",
  "names": ["axios"]
}
